"""remove old tasks stuff

Revision ID: 9722139332b6
Revises: 7c7a9fb2f886
Create Date: 2020-07-23 22:19:28.838388

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9722139332b6'
down_revision = '7c7a9fb2f886'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('external_service_task_completions')
    op.drop_column('users', 'habitica_api_token')
    op.drop_column('users', 'dependencies')
    op.drop_column('users', 'priorities')
    op.drop_column('users', 'habitica_user_id')
    op.drop_column('users', 'toodledo_token_json')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('toodledo_token_json', sa.VARCHAR(length=512), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('habitica_user_id', sa.VARCHAR(length=128), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('priorities', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('dependencies', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('habitica_api_token', sa.VARCHAR(length=128), autoincrement=False, nullable=True))
    op.create_table('external_service_task_completions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('service', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('task_id', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('subtask_id', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('duration_seconds', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='task_completions_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='task_completions_pkey')
    )
    # ### end Alembic commands ###
